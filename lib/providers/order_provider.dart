import 'package:flutter/foundation.dart';
import 'package:logistics_app/models/order.dart';
import 'package:logistics_app/models/order_statistics.dart';
import 'package:shared_preferences/shared_preferences.dart';

class OrderProvider with ChangeNotifier {
  List<Order> _orders = [];
  bool _isLoading = false;
  String? _error;
  OrderStatistics _statistics = const OrderStatistics();

  List<Order> get orders => _orders;
  bool get isLoading => _isLoading;
  String? get error => _error;
  OrderStatistics get statistics => _statistics;

  List<Order> get pendingOrders =>
      _orders.where((order) => order.status == OrderStatus.pending).toList();

  List<Order> get activeOrders => _orders
      .where(
        (order) =>
            order.status == OrderStatus.confirmed ||
            order.status == OrderStatus.inTransit ||
            order.status == OrderStatus.returned,
      )
      .toList();

  Future<void> loadOrders() async {
    _isLoading = true;
    _error = null;
    notifyListeners();

    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      await _loadStatistics();

      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
      await Future.delayed(const Duration(seconds: 1));

      _orders = [
        Order(
          id: '1',
          customerName: '–ê—Ä–∞–º –°–∞—Ä–∫—Å—è–Ω',
          customerPhone: '+37491123456',
          pickupAddress: '—É–ª. –ê–±–æ–≤—è–Ω–∞, 15, –ï—Ä–µ–≤–∞–Ω',
          deliveryAddress: '—É–ª. –°–µ–≤–µ—Ä–Ω–∞—è, 25, –ï—Ä–µ–≤–∞–Ω',
          weight: 5.5,
          description: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
          status: OrderStatus.pending,
          createdAt: DateTime.now().subtract(const Duration(hours: 2)),
          price: 15000.0,
          dimensions: '40x30x20 —Å–º',
          ridePrice: 15000.0,
          trackingNumber: 'CIO001',
          deliveryTime: DeliveryTime.urgent,
          latitude: 40.1776,
          longitude: 44.5126,
          priority: 1,
        ),
        Order(
          id: '2',
          customerName: '–ú–∞—Ä–∏—è –•–∞—á–∞—Ç—Ä—è–Ω',
          customerPhone: '+37491234567',
          pickupAddress: '–ø—Ä. –ë–∞–≥—Ä–∞—Ç–∏–æ–Ω–∞, 10, –ï—Ä–µ–≤–∞–Ω',
          deliveryAddress: '—É–ª. –ü—É—à–∫–∏–Ω–∞, 35, –ï—Ä–µ–≤–∞–Ω',
          weight: 2.0,
          description: '–î–æ–∫—É–º–µ–Ω—Ç—ã',
          status: OrderStatus.inTransit,
          createdAt: DateTime.now().subtract(const Duration(hours: 5)),
          estimatedDelivery: DateTime.now().add(const Duration(hours: 1)),
          driverId: 'driver1',
          driverName: '–ê—Ä–∞–º –ì—Ä–∏–≥–æ—Ä—è–Ω',
          price: 8000.0,
          dimensions: '30x20x5 —Å–º',
          ridePrice: 8000.0,
          trackingNumber: 'CIO002',
          deliveryTime: DeliveryTime.oneHour,
          latitude: 40.1911,
          longitude: 44.4991,
          priority: 2,
        ),
        Order(
          id: '3',
          customerName: '–ü–µ—Ç—Ä–æ—Å –ê–≤–µ—Ç–∏—Å—è–Ω',
          customerPhone: '+37491345678',
          pickupAddress: '—É–ª. –ê—Ä–∞–º–∏, 25, –ï—Ä–µ–≤–∞–Ω',
          deliveryAddress: '—É–ª. –°–∞—Ä—å—è–Ω–∞, 40, –ï—Ä–µ–≤–∞–Ω',
          weight: 10.0,
          description: '–ú–µ–±–µ–ª—å',
          status: OrderStatus.delivered,
          createdAt: DateTime.now().subtract(const Duration(days: 1)),
          estimatedDelivery: DateTime.now().subtract(const Duration(hours: 2)),
          driverId: 'driver1',
          driverName: '–ê—Ä–∞–º –ì—Ä–∏–≥–æ—Ä—è–Ω',
          price: 25000.0,
          dimensions: '120x80x40 —Å–º',
          ridePrice: 25000.0,
          trackingNumber: 'CIO003',
          deliveryTime: DeliveryTime.morning,
          completionPin: '123456',
          completedAt: DateTime.now().subtract(const Duration(hours: 2)),
          latitude: 40.1872,
          longitude: 44.5152,
          priority: 3,
        ),
        Order(
          id: '4',
          customerName: '–ê–Ω–Ω–∞ –ö–∞—Ä–∞–ø–µ—Ç—è–Ω',
          customerPhone: '+37491456789',
          pickupAddress: '—É–ª. –ö–æ–º–∏—Ç–∞—Å–∞, 5, –ï—Ä–µ–≤–∞–Ω',
          deliveryAddress: '—É–ª. –ú–æ—Å–∫–æ–≤—Å–∫–∞—è, 18, –ï—Ä–µ–≤–∞–Ω',
          weight: 3.2,
          description: '–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è',
          status: OrderStatus.confirmed,
          createdAt: DateTime.now().subtract(const Duration(minutes: 30)),
          estimatedDelivery: DateTime.now().add(const Duration(hours: 2)),
          price: 12000.0,
          dimensions: '25x25x15 —Å–º',
          ridePrice: 12000.0,
          trackingNumber: 'CIO004',
          deliveryTime: DeliveryTime.twoHours,
          latitude: 40.2038,
          longitude: 44.5152,
          priority: 4,
        ),
        Order(
          id: '5',
          customerName: '–î–∞–≤–∏–¥ –ú–∞–Ω—É–∫—è–Ω',
          customerPhone: '+37491567890',
          pickupAddress: '—É–ª. –ú–∞—à—Ç–æ—Ü–∞, 12, –ï—Ä–µ–≤–∞–Ω',
          deliveryAddress: '—É–ª. –ê—Ä—Ü–∞—Ö—Å–∫–∞—è, 8, –ï—Ä–µ–≤–∞–Ω',
          weight: 1.5,
          description: '–õ–µ–∫–∞—Ä—Å—Ç–≤–∞',
          status: OrderStatus.cancelled,
          createdAt: DateTime.now().subtract(const Duration(days: 2)),
          completedAt: DateTime.now().subtract(const Duration(days: 1)),
          price: 5000.0,
          dimensions: '15x10x8 —Å–º',
          ridePrice: 5000.0,
          trackingNumber: 'CIO005',
          deliveryTime: DeliveryTime.afternoon,
          latitude: 40.1836,
          longitude: 44.5147,
          priority: 5,
        ),
        // –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç
        Order(
          id: '6',
          customerName: '–ö–∞—Ä–µ–Ω –ê–≤–µ—Ç–∏—Å—è–Ω',
          customerPhone: '+37491999888',
          pickupAddress: '—É–ª. –ê—Ä–∞–º –•–∞—á–∞—Ç—É—Ä—è–Ω–∞, 30, –ï—Ä–µ–≤–∞–Ω',
          deliveryAddress: '—É–ª. –°–∞—è—Ç-–ù–æ–≤–∞, 15, –ï—Ä–µ–≤–∞–Ω',
          weight: 2.0,
          description: '–í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞',
          status: OrderStatus.returned,
          createdAt: DateTime.now().subtract(const Duration(hours: 1)),
          isReturn: true,
          returnRequestedAt:
              DateTime.now().subtract(const Duration(minutes: 30)),
          returnReason: '–ö–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ–¥—É–º–∞–ª',
          price: 8000.0,
          dimensions: '25x20x15 —Å–º',
          ridePrice: 8000.0,
          trackingNumber: 'CIO006',
          deliveryTime: DeliveryTime.urgent,
          latitude: 40.1792,
          longitude: 44.4991,
          priority: 0, // –í—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–æ–≤
        ),
      ];

      _isLoading = false;
      notifyListeners();
    } catch (e) {
      _error = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤';
      _isLoading = false;
      notifyListeners();
    }
  }

  Future<void> takeOrder(String orderId) async {
    debugPrint('üîÑ –í–∑—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞ $orderId –≤ —Ä–∞–±–æ—Ç—É');

    final orderIndex = _orders.indexWhere((order) => order.id == orderId);
    if (orderIndex != -1) {
      _orders[orderIndex] = _orders[orderIndex].copyWith(
        status: OrderStatus.inTransit,
        driverId: 'current_driver',
        driverName: '–ê—Ä–∞–º –ì—Ä–∏–≥–æ—Ä—è–Ω',
      );

      debugPrint('‚úÖ –ó–∞–∫–∞–∑ $orderId –≤–∑—è—Ç –≤ —Ä–∞–±–æ—Ç—É');
      notifyListeners();
    } else {
      debugPrint('‚ùå –ó–∞–∫–∞–∑ $orderId –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }

  Future<void> completeOrder(String orderId, String pin) async {
    debugPrint('üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ $orderId —Å PIN: $pin');

    final orderIndex = _orders.indexWhere((order) => order.id == orderId);
    if (orderIndex != -1) {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ PIN —á–µ—Ä–µ–∑ API
      // –î–ª—è –¥–µ–º–æ –ø—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π 6-–∑–Ω–∞—á–Ω—ã–π PIN
      if (pin.length == 6) {
        _orders[orderIndex] = _orders[orderIndex].copyWith(
          status: OrderStatus.delivered,
          completionPin: pin,
          completedAt: DateTime.now(),
        );

        debugPrint('‚úÖ –ó–∞–∫–∞–∑ $orderId —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
        await _incrementCompleted(); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö
        notifyListeners();
      } else {
        debugPrint('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π PIN –¥–ª—è –∑–∞–∫–∞–∑–∞ $orderId');
      }
    } else {
      debugPrint('‚ùå –ó–∞–∫–∞–∑ $orderId –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }

  Future<void> updateOrderStatus(String orderId, OrderStatus status) async {
    debugPrint('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ $orderId –Ω–∞ $status');

    final orderIndex = _orders.indexWhere((order) => order.id == orderId);
    if (orderIndex != -1) {
      final oldStatus = _orders[orderIndex].status;
      _orders[orderIndex] = _orders[orderIndex].copyWith(
        status: status,
        driverId: status == OrderStatus.inTransit
            ? 'current_driver'
            : _orders[orderIndex].driverId,
        driverName: status == OrderStatus.inTransit
            ? '–ê—Ä–∞–º –ì—Ä–∏–≥–æ—Ä—è–Ω'
            : _orders[orderIndex].driverName,
        completedAt: status == OrderStatus.delivered ? DateTime.now() : null,
      );

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
      if (status == OrderStatus.delivered &&
          oldStatus != OrderStatus.delivered) {
        await _incrementCompleted();
      } else if (status == OrderStatus.cancelled &&
          oldStatus != OrderStatus.cancelled) {
        await _incrementCancelled();
      }

      debugPrint(
          '‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ $orderId –∏–∑–º–µ–Ω–µ–Ω —Å $oldStatus –Ω–∞ ${_orders[orderIndex].status}');
      notifyListeners();
    } else {
      debugPrint('‚ùå –ó–∞–∫–∞–∑ $orderId –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }

  Future<void> addOrder(Order order) async {
    _orders.add(order);
    notifyListeners();
  }

  // –û–±–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
  Future<void> updateTrackingNumber(
      String orderId, String trackingNumber) async {
    final orderIndex = _orders.indexWhere((order) => order.id == orderId);
    if (orderIndex != -1) {
      _orders[orderIndex] =
          _orders[orderIndex].copyWith(trackingNumber: trackingNumber);
      notifyListeners();
      debugPrint('üì¶ –¢—Ä–µ–∫–µ—Ä –∑–∞–∫–∞–∑–∞ $orderId –æ–±–Ω–æ–≤–ª–µ–Ω: $trackingNumber');
    }
  }

  // –û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞
  Future<void> updateDeliveryTime(
      String orderId, DeliveryTime deliveryTime) async {
    final orderIndex = _orders.indexWhere((order) => order.id == orderId);
    if (orderIndex != -1) {
      _orders[orderIndex] =
          _orders[orderIndex].copyWith(deliveryTime: deliveryTime);
      notifyListeners();
      debugPrint(
          '‚è∞ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ $orderId –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${_orders[orderIndex].deliveryTimeText}');
    }
  }

  // –í–µ—Ä–Ω—É—Ç—å –∑–∞–∫–∞–∑
  Future<void> returnOrder(String orderId, String reason) async {
    final orderIndex = _orders.indexWhere((order) => order.id == orderId);
    if (orderIndex != -1) {
      _orders[orderIndex] = _orders[orderIndex].copyWith(
        status: OrderStatus.cancelled,
        completedAt: DateTime.now(),
      );

      await _incrementReturned(); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤
      debugPrint('üîÑ –ó–∞–∫–∞–∑ $orderId –≤–æ–∑–≤—Ä–∞—â–µ–Ω: $reason');
      notifyListeners();
    }
  }

  // –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ QR-–∫–æ–¥
  Future<void> addOrderFromQR(String qrData) async {
    try {
      // –ü–∞—Ä—Å–∏–Ω–≥ QR-–∫–æ–¥–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—É–¥–µ—Ç JSON –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç)
      final newOrder = Order(
        id: 'QR_${DateTime.now().millisecondsSinceEpoch}',
        customerName: '–ö–ª–∏–µ–Ω—Ç QR',
        customerPhone: '+37491000000',
        pickupAddress: '–°–∫–ª–∞–¥ CIO Logistics',
        deliveryAddress: '–ê–¥—Ä–µ—Å –∏–∑ QR: $qrData',
        weight: 1.0,
        description: '–¢–æ–≤–∞—Ä —Å–æ —Å–∫–ª–∞–¥–∞',
        status: OrderStatus.pending,
        createdAt: DateTime.now(),
        price: 10000.0,
        dimensions: '20x20x10 —Å–º',
        ridePrice: 10000.0,
        deliveryTime: DeliveryTime.afternoon,
        qrCode: qrData,
        priority: 0,
      );

      _orders.insert(0, newOrder);
      notifyListeners();

      debugPrint('‚úÖ –ó–∞–∫–∞–∑ –¥–æ–±–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ QR-–∫–æ–¥: ${newOrder.id}');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ QR-–∫–æ–¥–∞: $e');
    }
  }

  // –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ (–æ—Ç–º–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏)
  Future<void> cancelOrder(String orderId, String reason) async {
    final orderIndex = _orders.indexWhere((order) => order.id == orderId);
    if (orderIndex != -1) {
      _orders[orderIndex] = _orders[orderIndex].copyWith(
        status: OrderStatus.cancelled,
        completedAt: DateTime.now(),
      );
      await _incrementCancelled();
      debugPrint('üîÑ –ó–∞–∫–∞–∑ $orderId –æ—Ç–º–µ–Ω—ë–Ω. –ü—Ä–∏—á–∏–Ω–∞: $reason');
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è
  Map<String, int> getDriverStatistics() {
    final completed =
        _orders.where((o) => o.status == OrderStatus.delivered).length;
    final cancelled =
        _orders.where((o) => o.status == OrderStatus.cancelled).length;
    final inProgress =
        _orders.where((o) => o.status == OrderStatus.inTransit).length;

    return {
      'completed': completed,
      'cancelled': cancelled,
      'inProgress': inProgress,
      'total': _orders.length,
    };
  }

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ SharedPreferences
  Future<void> _saveStatistics() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      await prefs.setString(
          'order_statistics', _statistics.toJson().toString());
      debugPrint('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: $_statistics');
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: $e');
    }
  }

  // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ SharedPreferences
  Future<void> _loadStatistics() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      final statsString = prefs.getString('order_statistics');
      if (statsString != null) {
        // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å JSON)
        final completedMatch =
            RegExp(r'completedOrders: (\d+)').firstMatch(statsString);
        final cancelledMatch =
            RegExp(r'cancelledOrders: (\d+)').firstMatch(statsString);
        final returnedMatch =
            RegExp(r'returnedOrders: (\d+)').firstMatch(statsString);
        final totalMatch =
            RegExp(r'totalDelivered: (\d+)').firstMatch(statsString);

        _statistics = OrderStatistics(
          completedOrders:
              completedMatch != null ? int.parse(completedMatch.group(1)!) : 0,
          cancelledOrders:
              cancelledMatch != null ? int.parse(cancelledMatch.group(1)!) : 0,
          returnedOrders:
              returnedMatch != null ? int.parse(returnedMatch.group(1)!) : 0,
          totalDelivered:
              totalMatch != null ? int.parse(totalMatch.group(1)!) : 0,
        );
        debugPrint('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: $_statistics');
      }
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: $e');
      _statistics = const OrderStatistics();
    }
  }

  // –£–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
  Future<void> _incrementCompleted() async {
    _statistics = _statistics.copyWith(
      completedOrders: _statistics.completedOrders + 1,
      totalDelivered: _statistics.totalDelivered + 1,
    );
    await _saveStatistics();
    notifyListeners();
  }

  // –£–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
  Future<void> _incrementCancelled() async {
    _statistics = _statistics.copyWith(
      cancelledOrders: _statistics.cancelledOrders + 1,
    );
    await _saveStatistics();
    notifyListeners();
  }

  // –£–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤
  Future<void> _incrementReturned() async {
    _statistics = _statistics.copyWith(
      returnedOrders: _statistics.returnedOrders + 1,
    );
    await _saveStatistics();
    notifyListeners();
  }

  // –û–±–Ω—É–ª–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  Future<void> resetStatistics() async {
    _statistics = const OrderStatistics();
    await _saveStatistics();
    notifyListeners();
    debugPrint('üîÑ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω—É–ª–µ–Ω–∞');
  }

  // –ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –∑–∞–∫–∞–∑–∞ (–∫–ª–∏–µ–Ω—Ç –∑–≤–æ–Ω–∏—Ç –∏ –ø—Ä–æ—Å–∏—Ç –≤–µ—Ä–Ω—É—Ç—å)
  Future<void> requestReturn(String orderId, String reason) async {
    final orderIndex = _orders.indexWhere((order) => order.id == orderId);
    if (orderIndex != -1) {
      final order = _orders[orderIndex];
      if (order.status == OrderStatus.delivered) {
        _orders[orderIndex] = order.copyWith(
          status: OrderStatus.returned,
          isReturn: true,
          returnRequestedAt: DateTime.now(),
          returnReason: reason,
          // –û–±–Ω—É–ª—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –∑–∞–∫–∞–∑ —Å–Ω–æ–≤–∞ –≤ —Ä–∞–±–æ—Ç–µ
          completedAt: null,
          completionPin: null,
        );

        // –£–º–µ–Ω—å—à–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö (—Ç–∞–∫ –∫–∞–∫ –∑–∞–∫–∞–∑ —Å–Ω–æ–≤–∞ –≤ —Ä–∞–±–æ—Ç–µ)
        if (_statistics.completedOrders > 0) {
          _statistics = _statistics.copyWith(
            completedOrders: _statistics.completedOrders - 1,
            totalDelivered: _statistics.totalDelivered - 1,
          );
          await _saveStatistics();
        }

        notifyListeners();
        debugPrint('üîÑ –ó–∞–ø—Ä–æ—à–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç –∑–∞–∫–∞–∑–∞ $orderId. –ü—Ä–∏—á–∏–Ω–∞: $reason');
      } else {
        debugPrint(
            '‚ùå –ó–∞–∫–∞–∑ $orderId –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ–∑–≤—Ä–∞—â–µ–Ω (—Å—Ç–∞—Ç—É—Å: ${order.status})');
      }
    } else {
      debugPrint('‚ùå –ó–∞–∫–∞–∑ $orderId –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }

  // –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç (–≤–æ–¥–∏—Ç–µ–ª—å –∑–∞–±—Ä–∞–ª –∑–∞–∫–∞–∑ —É –∫–ª–∏–µ–Ω—Ç–∞)
  Future<void> completeReturn(String orderId, String pin) async {
    final orderIndex = _orders.indexWhere((order) => order.id == orderId);
    if (orderIndex != -1) {
      final order = _orders[orderIndex];
      if (order.status == OrderStatus.returned && pin.length == 6) {
        _orders[orderIndex] = order.copyWith(
          status: OrderStatus.delivered,
          completionPin: pin,
          completedAt: DateTime.now(),
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–≤—Ä–∞—Ç–µ
          isReturn: true,
        );

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
        await _incrementReturned();
        await _incrementCompleted();

        debugPrint('‚úÖ –í–æ–∑–≤—Ä–∞—Ç –∑–∞–∫–∞–∑–∞ $orderId –∑–∞–≤–µ—Ä—à–µ–Ω —Å PIN: $pin');
      } else {
        debugPrint(
            '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π PIN –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ $orderId –∏–ª–∏ –∑–∞–∫–∞–∑ –Ω–µ –≤ —Å—Ç–∞—Ç—É—Å–µ –≤–æ–∑–≤—Ä–∞—Ç–∞');
      }
    } else {
      debugPrint('‚ùå –ó–∞–∫–∞–∑ $orderId –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç (—Ç–æ–ª—å–∫–æ —Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å)
  List<Order> get returnOrders =>
      _orders.where((order) => order.status == OrderStatus.returned).toList()
        ..sort((a, b) => (a.returnRequestedAt ?? DateTime.now())
            .compareTo(b.returnRequestedAt ?? DateTime.now()));

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ –∑–∞–∫–∞–∑—ã –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç
  bool get hasReturns => returnOrders.isNotEmpty;
}
